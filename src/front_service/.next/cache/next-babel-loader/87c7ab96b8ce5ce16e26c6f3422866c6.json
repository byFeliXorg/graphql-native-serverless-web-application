{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\pw-forget.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\nimport { AppWithAuthentication } from \"../src/components/App\";\nimport * as routes from \"../src/constants/routes\";\nimport { auth } from \"../src/firebase\";\n\nconst PasswordForgetPage = () => __jsx(AppWithAuthentication, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, __jsx(PasswordForgetForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}));\n\nconst updateByPropertyName = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSubmit\", event => {\n      const {\n        email\n      } = this.state;\n      auth.doPasswordReset(email).then(() => {\n        this.setState(() => _objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState(updateByPropertyName(\"error\", error));\n      });\n      event.preventDefault();\n    });\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const {\n      email,\n      error\n    } = this.state;\n    const isInvalid = email === \"\";\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, __jsx(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"80vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"w-100\",\n      style: {\n        maxWidth: \"500px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Reset Password\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, __jsx(Form.Group, {\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, \"Email\"), __jsx(Form.Control, {\n      value: this.state.email,\n      onChange: event => this.setState(updateByPropertyName(\"email\", event.target.value)),\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    })), __jsx(Button, {\n      disabled: isInvalid,\n      className: \"w-100\",\n      type: \"submit\",\n      style: {\n        background: \"#343a40\",\n        color: \"#ffc107\",\n        border: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"RESET PASSWORD\"), error && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 31\n      }\n    }, error.message)))))));\n  }\n\n}\n\nconst PasswordForgetLink = () => __jsx(\"p\", {\n  className: \"w-100 text-center mt-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }\n}, __jsx(Link, {\n  href: routes.PASSWORD_FORGET,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }\n}, \"Forgot Password?\")));\n\nexport default PasswordForgetPage;\nexport { PasswordForgetForm, PasswordForgetLink };","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/pw-forget.js"],"names":["React","Component","Link","Form","Button","Card","Alert","Container","AppWithAuthentication","routes","auth","PasswordForgetPage","updateByPropertyName","propertyName","value","INITIAL_STATE","email","error","PasswordForgetForm","constructor","props","event","state","doPasswordReset","then","setState","catch","preventDefault","render","isInvalid","minHeight","maxWidth","onSubmit","target","background","color","border","message","PasswordForgetLink","PASSWORD_FORGET"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Form, Button, Card, Alert,Container } from \"react-bootstrap\";\r\n\r\nimport { AppWithAuthentication } from \"../src/components/App\";\r\nimport * as routes from \"../src/constants/routes\";\r\nimport { auth } from \"../src/firebase\";\r\n\r\nconst PasswordForgetPage = () => (\r\n  <AppWithAuthentication>\r\n    <PasswordForgetForm />\r\n  </AppWithAuthentication>\r\n);\r\n\r\nconst updateByPropertyName = (propertyName, value) => () => ({\r\n  [propertyName]: value\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    auth\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState(() => ({ ...INITIAL_STATE }));\r\n      })\r\n      .catch(error => {\r\n        this.setState(updateByPropertyName(\"error\", error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === \"\";\r\n\r\n    return (\r\n      <div>\r\n\r\n        <Container\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          style={{ minHeight: \"80vh\" }}>\r\n            \r\n            <div className=\"w-100\" style={{ maxWidth: \"500px\" }}>\r\n            \r\n            <Card>\r\n                <Card.Body>\r\n                  <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n                  \r\n                  <Form onSubmit={this.onSubmit}>\r\n\r\n                    <Form.Group id=\"email\">\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control value={this.state.email}\r\n                        onChange={event =>\r\n                          this.setState(updateByPropertyName(\"email\", event.target.value))\r\n                        }\r\n                        type=\"text\"\r\n                        placeholder=\"Email Address\" />\r\n                    </Form.Group>\r\n\r\n                    <Button disabled={isInvalid} className=\"w-100\"  type=\"submit\" style={{background:\"#343a40\",color:\"#ffc107\",border: \"none\"}}>\r\n                        RESET PASSWORD\r\n                    </Button>\r\n                    {error && <p>{error.message}</p>}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n\r\n\r\n            </div>\r\n        </Container>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p  className=\"w-100 text-center mt-3\">\r\n    <Link href={routes.PASSWORD_FORGET}>\r\n      <a>Forgot Password?</a>\r\n    </Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n"]},"metadata":{},"sourceType":"module"}