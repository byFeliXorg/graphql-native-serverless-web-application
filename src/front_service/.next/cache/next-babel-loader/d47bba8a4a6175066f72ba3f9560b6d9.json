{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\src\\\\components\\\\data\\\\offerList.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nconst OFFER_QUERY = gql`\n  {\n    allOffres {\n        data {\n        title\n        address {\n            ville\n        }\n        description\n        postedBy {\n            email\n            id_firebase_auth\n            _id\n        }\n        }\n    }\n  }\n`;\nconst DELETE_ITEM = gql`\n  mutation DeleteItem($id: ID!) {\n    deleteItem(id: $id) {\n      _id\n    }\n  }\n`;\nconst UPDATE_ITEM = gql`\n  mutation UpdateItem($id: ID!, $isComplete: Boolean!) {\n    updateItem(id: $id, data: { isComplete: $isComplete }) {\n      _id\n      isComplete\n    }\n  }\n`;\nexport default function OfferList() {\n  const {\n    data,\n    loading\n  } = useQuery(OFFER_QUERY);\n  /*\r\n    const [deleteItem, { loading: deleteLoading }] = useMutation(DELETE_ITEM, {\r\n      refetchQueries: [{ query: ITEMS_QUERY }],\r\n    });\r\n  \r\n    const [updateItem, { loading: updateLoading }] = useMutation(UPDATE_ITEM);\r\n  */\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, data.allOffres.data.map(item => {\n    return __jsx(\"div\", {\n      class: \"card mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      class: \"card-img-top\",\n      src: \"../../public/images/empty.png\",\n      alt: \"Card image cap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, __jsx(\"h5\", {\n      class: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, item.title), __jsx(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, item.description), __jsx(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, __jsx(\"small\", {\n      class: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 46\n      }\n    }, \"Posted by \", item.postedBy.email))));\n  }));\n}","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/src/components/data/offerList.js"],"names":["React","gql","useMutation","useQuery","OFFER_QUERY","DELETE_ITEM","UPDATE_ITEM","OfferList","data","loading","allOffres","map","item","title","description","postedBy","email"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AAEA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMI,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMK,WAAW,GAAGL,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASM,SAAT,GAAqB;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,QAAQ,CAACC,WAAD,CAAlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAIK,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,SAAL,CAAeF,IAAf,CAAoBG,GAApB,CAAyBC,IAAD,IAAU;AAE/B,WACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,cAAX;AAA0B,MAAA,GAAG,EAAC,+BAA9B;AAA8D,MAAA,GAAG,EAAC,gBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,IAAI,CAACC,KAA7B,CADJ,EAEI;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,IAAI,CAACE,WAA3B,CAFJ,EAGI;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB;AAAO,MAAA,KAAK,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAqCF,IAAI,CAAEG,QAAN,CAAeC,KAApD,CAArB,CAHJ,CAFJ,CADJ;AAUH,GAZA,CADH,CADJ;AAiBD","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\n\r\nconst OFFER_QUERY = gql`\r\n  {\r\n    allOffres {\r\n        data {\r\n        title\r\n        address {\r\n            ville\r\n        }\r\n        description\r\n        postedBy {\r\n            email\r\n            id_firebase_auth\r\n            _id\r\n        }\r\n        }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_ITEM = gql`\r\n  mutation DeleteItem($id: ID!) {\r\n    deleteItem(id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_ITEM = gql`\r\n  mutation UpdateItem($id: ID!, $isComplete: Boolean!) {\r\n    updateItem(id: $id, data: { isComplete: $isComplete }) {\r\n      _id\r\n      isComplete\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function OfferList() {\r\n  const { data, loading } = useQuery(OFFER_QUERY);\r\n/*\r\n  const [deleteItem, { loading: deleteLoading }] = useMutation(DELETE_ITEM, {\r\n    refetchQueries: [{ query: ITEMS_QUERY }],\r\n  });\r\n\r\n  const [updateItem, { loading: updateLoading }] = useMutation(UPDATE_ITEM);\r\n*/\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        {data.allOffres.data.map((item) => {\r\n            \r\n            return (\r\n                <div class=\"card mb-3\">\r\n                    <img class=\"card-img-top\" src=\"../../public/images/empty.png\" alt=\"Card image cap\"/>\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{item.title}</h5>\r\n                        <p class=\"card-text\">{item.description}</p>\r\n                        <p class=\"card-text\"><small class=\"text-muted\">Posted by {item. postedBy.email}</small></p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}