{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\prestation.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { connect } from 'react-redux';\n\nvar Prestation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Prestation, _React$Component);\n\n  var _super = _createSuper(Prestation);\n\n  function Prestation() {\n    _classCallCheck(this, Prestation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Prestation, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, \"Disabled input\"), __jsx(Form.Control, {\n        placeholder: \"Disabled input\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"Disabled select menu\"), __jsx(Form.Control, {\n        as: \"select\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, __jsx(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, \"Disabled select\"))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Check, {\n        type: \"checkbox\",\n        label: \"Can't check this\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  return Prestation;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    counter: state.counter.value\n  };\n};\n\nexport default connect(null)(Prestation);","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/prestation.jsx"],"names":["React","Form","connect","Prestation","store","Component","mapStateToProps","state","counter","value"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,U;;;;;;;;;;;;;6BAIO;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA,MAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,gBAA1B;AAA2C,QAAA,QAAQ,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF,EAKA,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAFF,CALA,EAWA,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,KAAK,EAAC,kBAAlC;AAAqD,QAAA,QAAQ,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXA,CADF;AAkBD;;;0CAtB+B;AAAA,UAARC,KAAQ,QAARA,KAAQ;AAAE;;;;EADbJ,KAAK,CAACK,S;;AA0B7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcC;AADS,GAAL;AAAA,CAA7B;;AAIF,eAAeP,OAAO,CAAC,IAAD,CAAP,CAAcC,UAAd,CAAf","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Prestation extends React.Component {\r\n    static getInitialProps({store}) {}\r\n\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Form.Group>\r\n          <Form.Label>Disabled input</Form.Label>\r\n          <Form.Control placeholder=\"Disabled input\" disabled />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Disabled select menu</Form.Label>\r\n          <Form.Control as=\"select\" disabled>\r\n            <option>Disabled select</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check type=\"checkbox\" label=\"Can't check this\" disabled />\r\n        </Form.Group>\r\n      \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    counter: state.counter.value\r\n});\r\n\r\nexport default connect(null)(Prestation);\r\n\r\n"]},"metadata":{},"sourceType":"module"}