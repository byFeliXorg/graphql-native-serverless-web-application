{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\register.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { connect } from 'react-redux';\n\nvar Register = /*#__PURE__*/function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  _createClass(Register, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props); // Create the ref\n\n    _this.emailRef = /*#__PURE__*/React.createRef();\n    _this.passwordRef = /*#__PURE__*/React.createRef();\n    _this.passwordConfirmRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          minHeight: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"w-100\",\n        style: {\n          maxWidth: \"400px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, __jsx(\"h2\", {\n        className: \"text-center mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"Sign Up\"), __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, __jsx(Form.Group, {\n        id: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, \"Email\"), __jsx(Form.Control, {\n        type: \"email\",\n        ref: this.emailRef,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Group, {\n        id: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, \"Password\"), __jsx(Form.Control, {\n        type: \"password\",\n        ref: this.passwordRef,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Group, {\n        id: \"password-confirm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"Password Confirmation\"), __jsx(Form.Control, {\n        type: \"password\",\n        ref: this.passwordConfirmRef,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      })), __jsx(Button, {\n        className: \"w-100\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, \"Sign Up\")))), __jsx(\"div\", {\n        className: \"w-100 text-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \"Already have an account?\")));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    counter: state.counter.value\n  };\n};\n\nexport default connect(null)(Register);","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/register.jsx"],"names":["React","Form","Button","Card","Alert","Container","Link","connect","Register","store","props","emailRef","createRef","passwordRef","passwordConfirmRef","minHeight","maxWidth","Component","mapStateToProps","state","counter","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Button, Card, Alert ,Container} from \"react-bootstrap\";\r\n\r\nimport Link from \"next/link\"\r\n\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Register extends React.Component {\r\n    static getInitialProps({store}) {}\r\n\r\n    constructor(props) {\r\n      super(props)\r\n  \r\n      // Create the ref\r\n      this.emailRef = React.createRef()\r\n      this.passwordRef = React.createRef()\r\n      this.passwordConfirmRef = React.createRef()\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n        <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n\r\n          <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            \r\n            <Form >\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={this.emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={this.passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control type=\"password\" ref={this.passwordConfirmRef} required />\r\n              </Form.Group>\r\n              <Button className=\"w-100\" type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Already have an account? \r\n        </div>\r\n          </div>\r\n\r\n      </Container>\r\n      )\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    counter: state.counter.value\r\n});\r\n\r\nexport default connect(null)(Register);"]},"metadata":{},"sourceType":"module"}