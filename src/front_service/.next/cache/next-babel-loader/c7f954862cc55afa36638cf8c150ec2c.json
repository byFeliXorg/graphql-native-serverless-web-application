{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { auth } from '../../firebase';\n\nvar updateByPropertyName = function updateByPropertyName(propertyName, value) {\n  return function () {\n    return _defineProperty({}, propertyName, value);\n  };\n};\n\nvar INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nvar PasswordChangeForm = /*#__PURE__*/function (_Component) {\n  _inherits(PasswordChangeForm, _Component);\n\n  var _super = _createSuper(PasswordChangeForm);\n\n  function PasswordChangeForm(props) {\n    var _this;\n\n    _classCallCheck(this, PasswordChangeForm);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      var passwordOne = _this.state.passwordOne;\n      auth.doPasswordUpdate(passwordOne).then(function () {\n        _this.setState(function () {\n          return _objectSpread({}, INITIAL_STATE);\n        });\n      })[\"catch\"](function (error) {\n        _this.setState(updateByPropertyName('error', error));\n      });\n      event.preventDefault();\n    });\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(PasswordChangeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo,\n          error = _this$state.error;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n      return __jsx(\"form\", {\n        onSubmit: this.onSubmit\n      }, __jsx(\"input\", {\n        value: passwordOne,\n        onChange: function onChange(event) {\n          return _this2.setState(updateByPropertyName('passwordOne', event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"New Password\"\n      }), __jsx(\"input\", {\n        value: passwordTwo,\n        onChange: function onChange(event) {\n          return _this2.setState(updateByPropertyName('passwordTwo', event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Confirm New Password\"\n      }), __jsx(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\"\n      }, \"Reset My Password\"), error && __jsx(\"p\", null, error.message));\n    }\n  }]);\n\n  return PasswordChangeForm;\n}(Component);\n\nexport default PasswordChangeForm;","map":null,"metadata":{},"sourceType":"module"}