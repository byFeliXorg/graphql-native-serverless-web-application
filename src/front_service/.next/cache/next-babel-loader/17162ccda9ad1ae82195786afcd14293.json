{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firebase } from '../../firebase';\n\nvar withAuthentication = function withAuthentication(Component) {\n  var WithAuthentication = /*#__PURE__*/function (_React$Component) {\n    _inherits(WithAuthentication, _React$Component);\n\n    var _super = _createSuper(WithAuthentication);\n\n    function WithAuthentication() {\n      _classCallCheck(this, WithAuthentication);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(WithAuthentication, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var onSetAuthUser = this.props.onSetAuthUser;\n        firebase.auth.onAuthStateChanged(function (authUser) {\n          authUser ? onSetAuthUser(authUser) : onSetAuthUser(null);\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return __jsx(Component, this.props);\n      }\n    }]);\n\n    return WithAuthentication;\n  }(React.Component);\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      onSetAuthUser: function onSetAuthUser(authUser) {\n        return dispatch({\n          type: 'AUTH_USER_SET',\n          authUser: authUser\n        });\n      }\n    };\n  };\n\n  return connect(null, mapDispatchToProps)(WithAuthentication);\n};\n\nexport default withAuthentication;","map":null,"metadata":{},"sourceType":"module"}