{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppWithAuthorization } from \"../src/components/App\";\nimport { db } from \"../src/firebase\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"../utils/apollo-client\";\nimport OfferList from \"../src/components/data/offerList\";\n\nconst fromObjectToList = object => object ? Object.keys(object).map(key => _objectSpread(_objectSpread({}, object[key]), {}, {\n  index: key\n})) : [];\n\nclass HomePage extends Component {\n  componentDidMount() {\n    const {\n      onSetUsers\n    } = this.props;\n    db.onceGetUsers().then(snapshot => onSetUsers(fromObjectToList(snapshot.val())));\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    return __jsx(AppWithAuthorization, null, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(\"br\", null), __jsx(\"div\", null, __jsx(OfferList, null))), !!users.length && __jsx(UserList, {\n      users: users\n    }));\n  }\n\n}\n\nconst UserList = ({\n  users\n}) => __jsx(\"div\", null, __jsx(\"h2\", null, \"List of App User IDs (Saved on Sign Up in Firebase Database)\"), users.map(user => __jsx(\"div\", {\n  key: user.index\n}, user.index)));\n\nconst mapStateToProps = state => ({\n  users: state.userState.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUsers: users => dispatch({\n    type: \"USERS_SET\",\n    users\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":null,"metadata":{},"sourceType":"module"}