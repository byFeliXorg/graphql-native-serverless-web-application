{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\src\\\\components\\\\PasswordChange\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\nimport { auth } from '../../firebase';\n\nconst updateByPropertyName = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSubmit\", event => {\n      const {\n        passwordOne\n      } = this.state;\n      auth.doPasswordUpdate(passwordOne).then(() => {\n        this.setState(() => _objectSpread({}, INITIAL_STATE));\n      }).catch(error => {\n        this.setState(updateByPropertyName('error', error));\n      });\n      event.preventDefault();\n    });\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const {\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n    return __jsx(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"80vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"w-100\",\n      style: {\n        maxWidth: \"500px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \"Change Password\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, __jsx(Form.Group, {\n      id: \"newpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }, \"New Password\"), __jsx(Form.Control, {\n      value: passwordOne,\n      onChange: event => this.setState(updateByPropertyName('passwordOne', event.target.value)),\n      type: \"password\",\n      placeholder: \"New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }\n    })), __jsx(Form.Group, {\n      id: \"confpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }\n    }, \"New Password\"), __jsx(Form.Control, {\n      value: passwordTwo,\n      onChange: event => this.setState(updateByPropertyName('passwordTwo', event.target.value)),\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    })), __jsx(Button, {\n      disabled: isInvalid,\n      className: \"w-100\",\n      type: \"submit\",\n      style: {\n        background: \"#343a40\",\n        color: \"#ffc107\",\n        border: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"RESET PASSWORD\"), error && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 32\n      }\n    }, error.message))))));\n  }\n\n}\n\nexport default PasswordChangeForm;","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/src/components/PasswordChange/index.js"],"names":["React","Component","Form","Button","Card","Alert","Container","auth","updateByPropertyName","propertyName","value","INITIAL_STATE","passwordOne","passwordTwo","error","PasswordChangeForm","constructor","props","event","state","doPasswordUpdate","then","setState","catch","preventDefault","render","isInvalid","minHeight","maxWidth","onSubmit","target","background","color","border","message"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAmCC,SAAnC,QAAoD,iBAApD;AAEA,SAASC,IAAT,QAAqB,gBAArB;;AAEA,MAAMC,oBAAoB,GAAG,CAACC,YAAD,EAAeC,KAAf,KAAyB,OAAO;AAC3D,GAACD,YAAD,GAAgBC;AAD2C,CAAP,CAAtD;;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,WAAW,EAAE,EAFO;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,MAAMC,kBAAN,SAAiCd,SAAjC,CAA2C;AACzCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,sCAMPC,KAAD,IAAW;AACpB,YAAM;AAAEN,QAAAA;AAAF,UAAkB,KAAKO,KAA7B;AAEAZ,MAAAA,IAAI,CAACa,gBAAL,CAAsBR,WAAtB,EACGS,IADH,CACQ,MAAM;AACV,aAAKC,QAAL,CAAc,wBAAYX,aAAZ,CAAd;AACD,OAHH,EAIGY,KAJH,CAIST,KAAK,IAAI;AACd,aAAKQ,QAAL,CAAcd,oBAAoB,CAAC,OAAD,EAAUM,KAAV,CAAlC;AACD,OANH;AAQAI,MAAAA,KAAK,CAACM,cAAN;AACD,KAlBkB;;AAGjB,SAAKL,KAAL,qBAAkBR,aAAlB;AACD;;AAgBDc,EAAAA,MAAM,GAAG;AACP,UAAM;AACJb,MAAAA,WADI;AAEJC,MAAAA,WAFI;AAGJC,MAAAA;AAHI,QAIF,KAAKK,KAJT;AAMA,UAAMO,SAAS,GACbd,WAAW,KAAKC,WAAhB,IACAD,WAAW,KAAK,EAFlB;AAIA,WACI,MAAC,SAAD;AACI,MAAA,SAAS,EAAC,kDADd;AAEI,MAAA,KAAK,EAAE;AAAEe,QAAAA,SAAS,EAAE;AAAb,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,MAAA,KAAK,EAAEjB,WADT;AAEE,MAAA,QAAQ,EAAEM,KAAK,IAAI,KAAKI,QAAL,CAAcd,oBAAoB,CAAC,aAAD,EAAgBU,KAAK,CAACY,MAAN,CAAapB,KAA7B,CAAlC,CAFrB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAWE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,MAAA,KAAK,EAAEG,WADT;AAEE,MAAA,QAAQ,EAAEK,KAAK,IAAI,KAAKI,QAAL,CAAcd,oBAAoB,CAAC,aAAD,EAAgBU,KAAK,CAACY,MAAN,CAAapB,KAA7B,CAAlC,CAFrB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,sBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,EAoBE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEgB,SAAlB;AAA6B,MAAA,SAAS,EAAC,OAAvC;AAAgD,MAAA,IAAI,EAAC,QAArD;AAA8D,MAAA,KAAK,EAAE;AAACK,QAAAA,UAAU,EAAC,SAAZ;AAAsBC,QAAAA,KAAK,EAAC,SAA5B;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBF,EAuBInB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACoB,OAAV,CAvBb,CAHF,CADJ,CAFA,CAJJ,CADJ;AAyCD;;AAzEwC;;AA4E3C,eAAenB,kBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Card, Alert,Container } from \"react-bootstrap\";\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst updateByPropertyName = (propertyName, value) => () => ({\r\n  [propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { passwordOne } = this.state;\r\n\r\n    auth.doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState(() => ({ ...INITIAL_STATE }));\r\n      })\r\n      .catch(error => {\r\n        this.setState(updateByPropertyName('error', error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '';\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"80vh\" }}>\r\n            \r\n            <div className=\"w-100\" style={{ maxWidth: \"500px\" }}>\r\n            \r\n            <Card>\r\n                <Card.Body>\r\n                  <h2 className=\"text-center mb-4\">Change Password</h2>\r\n                  \r\n                  <Form onSubmit={this.onSubmit}>\r\n\r\n                    <Form.Group id=\"newpassword\">\r\n                      <Form.Label>New Password</Form.Label>\r\n                      <Form.Control \r\n                        value={passwordOne}\r\n                        onChange={event => this.setState(updateByPropertyName('passwordOne', event.target.value))}\r\n                        type=\"password\"\r\n                        placeholder=\"New Password\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group id=\"confpassword\">\r\n                      <Form.Label>New Password</Form.Label>\r\n                      <Form.Control \r\n                        value={passwordTwo}\r\n                        onChange={event => this.setState(updateByPropertyName('passwordTwo', event.target.value))}\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm New Password\" />\r\n                    </Form.Group>\r\n\r\n                    <Button disabled={isInvalid} className=\"w-100\"  type=\"submit\" style={{background:\"#343a40\",color:\"#ffc107\",border: \"none\"}}>\r\n                        RESET PASSWORD\r\n                    </Button>\r\n                    { error && <p>{error.message}</p> }\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordChangeForm;"]},"metadata":{},"sourceType":"module"}