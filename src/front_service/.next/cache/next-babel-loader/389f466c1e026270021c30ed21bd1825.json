{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport { firebase } from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nvar withAuthorization = function withAuthorization(needsAuthorization) {\n  return function (Component) {\n    var WithAuthorization = /*#__PURE__*/function (_React$Component) {\n      _inherits(WithAuthorization, _React$Component);\n\n      var _super = _createSuper(WithAuthorization);\n\n      function WithAuthorization() {\n        _classCallCheck(this, WithAuthorization);\n\n        return _super.apply(this, arguments);\n      }\n\n      _createClass(WithAuthorization, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          firebase.auth.onAuthStateChanged(function (authUser) {\n            if (!authUser && needsAuthorization) {\n              Router.push(routes.SIGN_IN);\n            }\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return __jsx(Component, this.props);\n        }\n      }]);\n\n      return WithAuthorization;\n    }(React.Component);\n\n    return WithAuthorization;\n  };\n};\n\nexport default withAuthorization;","map":null,"metadata":{},"sourceType":"module"}