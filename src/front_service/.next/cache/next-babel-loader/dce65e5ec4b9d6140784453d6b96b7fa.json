{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\prestation.jsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport { connect } from 'react-redux';\n\nvar Prestation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Prestation, _React$Component);\n\n  var _super = _createSuper(Prestation);\n\n  function Prestation() {\n    _classCallCheck(this, Prestation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Prestation, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, __jsx(Field, {\n        name: \"firstName\",\n        component: renderTextField,\n        label: \"First Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, __jsx(Field, {\n        name: \"lastName\",\n        component: renderTextField,\n        label: \"Last Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, __jsx(Field, {\n        name: \"email\",\n        component: renderTextField,\n        label: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, __jsx(Field, {\n        name: \"sex\",\n        component: renderRadioGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, __jsx(RadioButton, {\n        value: \"male\",\n        label: \"male\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }), __jsx(RadioButton, {\n        value: \"female\",\n        label: \"female\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }))), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, __jsx(Field, {\n        name: \"favoriteColor\",\n        component: renderSelectField,\n        label: \"Favorite Color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, __jsx(MenuItem, {\n        value: 'ff0000',\n        primaryText: \"Red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }), __jsx(MenuItem, {\n        value: '00ff00',\n        primaryText: \"Green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }), __jsx(MenuItem, {\n        value: '0000ff',\n        primaryText: \"Blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }))), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, __jsx(Field, {\n        name: \"employed\",\n        component: renderCheckbox,\n        label: \"Employed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, __jsx(Field, {\n        name: \"notes\",\n        component: renderTextField,\n        label: \"Notes\",\n        multiLine: true,\n        rows: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        disabled: pristine || submitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"Submit\"), __jsx(\"button\", {\n        type: \"button\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"Clear Values\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  return Prestation;\n}(React.Component);\n\nvar validate = function validate(values) {\n  var errors = {};\n  var requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(function (field) {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nvar renderTextField = function renderTextField(_ref2) {\n  var input = _ref2.input,\n      label = _ref2.label,\n      _ref2$meta = _ref2.meta,\n      touched = _ref2$meta.touched,\n      error = _ref2$meta.error,\n      custom = _objectWithoutProperties(_ref2, [\"input\", \"label\", \"meta\"]);\n\n  return __jsx(TextField, _extends({\n    hintText: label,\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, custom, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar renderCheckbox = function renderCheckbox(_ref3) {\n  var input = _ref3.input,\n      label = _ref3.label;\n  return __jsx(Checkbox, {\n    label: label,\n    checked: input.value ? true : false,\n    onCheck: input.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  });\n};\n\nvar renderRadioGroup = function renderRadioGroup(_ref4) {\n  var input = _ref4.input,\n      rest = _objectWithoutProperties(_ref4, [\"input\"]);\n\n  return __jsx(RadioButtonGroup, _extends({}, input, rest, {\n    valueSelected: input.value,\n    onChange: function onChange(event, value) {\n      return input.onChange(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar renderSelectField = function renderSelectField(_ref5) {\n  var input = _ref5.input,\n      label = _ref5.label,\n      _ref5$meta = _ref5.meta,\n      touched = _ref5$meta.touched,\n      error = _ref5$meta.error,\n      children = _ref5.children,\n      custom = _objectWithoutProperties(_ref5, [\"input\", \"label\", \"meta\", \"children\"]);\n\n  return __jsx(SelectField, _extends({\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, {\n    onChange: function onChange(event, index, value) {\n      return input.onChange(value);\n    },\n    children: children\n  }, custom, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate: validate,\n  asyncValidate: asyncValidate\n})(Prestation);","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/prestation.jsx"],"names":["React","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","Checkbox","SelectField","MenuItem","connect","Prestation","handleSubmit","renderTextField","renderRadioGroup","renderSelectField","renderCheckbox","pristine","submitting","reset","store","Component","validate","values","errors","requiredFields","forEach","field","email","test","input","label","meta","touched","error","custom","value","onChange","rest","event","children","index","form","asyncValidate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from 'material-ui/TextField'\r\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Prestation extends React.Component {\r\n    static getInitialProps({store}) {}\r\n\r\n    render() {\r\n      return (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <Field name=\"firstName\" component={renderTextField} label=\"First Name\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"lastName\" component={renderTextField} label=\"Last Name\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"email\" component={renderTextField} label=\"Email\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"sex\" component={renderRadioGroup}>\r\n              <RadioButton value=\"male\" label=\"male\"/>\r\n              <RadioButton value=\"female\" label=\"female\"/>\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <Field name=\"favoriteColor\" component={renderSelectField} label=\"Favorite Color\">\r\n              <MenuItem value={'ff0000'} primaryText=\"Red\"/>\r\n              <MenuItem value={'00ff00'} primaryText=\"Green\"/>\r\n              <MenuItem value={'0000ff'} primaryText=\"Blue\"/>\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <Field name=\"employed\" component={renderCheckbox} label=\"Employed\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"notes\" component={renderTextField} label=\"Notes\" multiLine={true} rows={2}/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\r\n            <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\n  const validate = values => {\r\n    const errors = {}\r\n    const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\r\n    requiredFields.forEach(field => {\r\n        if (!values[ field ]) {\r\n        errors[ field ] = 'Required'\r\n        }\r\n    })\r\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n    }\r\n\r\n    const renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => (\r\n    <TextField hintText={label}\r\n        floatingLabelText={label}\r\n        errorText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n    />\r\n    )\r\n\r\n    const renderCheckbox = ({ input, label }) => (\r\n    <Checkbox label={label}\r\n        checked={input.value ? true : false}\r\n        onCheck={input.onChange}/>\r\n    )\r\n\r\n    const renderRadioGroup = ({ input, ...rest }) => (\r\n    <RadioButtonGroup {...input} {...rest}\r\n        valueSelected={input.value}\r\n        onChange={(event, value) => input.onChange(value)}/>\r\n    )\r\n\r\n    const renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => (\r\n    <SelectField\r\n        floatingLabelText={label}\r\n        errorText={touched && error}\r\n        {...input}\r\n        onChange={(event, index, value) => input.onChange(value)}\r\n        children={children}\r\n        {...custom}/>\r\n    )\r\n\r\n  \r\n    export default reduxForm({\r\n      form: 'MaterialUiForm',  // a unique identifier for this form\r\n      validate,\r\n      asyncValidate\r\n    })(Prestation);"]},"metadata":{},"sourceType":"module"}