{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\prestation.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { React, Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\n\nclass Prestation extends Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"renderTextField\", (_ref) => {\n      let {\n        input,\n        label,\n        meta: {\n          touched,\n          error\n        }\n      } = _ref,\n          custom = _objectWithoutProperties(_ref, [\"input\", \"label\", \"meta\"]);\n\n      return __jsx(TextField, _extends({\n        hintText: label,\n        floatingLabelText: label,\n        errorText: touched && error\n      }, input, custom, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }));\n    });\n\n    _defineProperty(this, \"renderCheckbox\", ({\n      input,\n      label\n    }) => __jsx(Checkbox, {\n      label: label,\n      checked: input.value ? true : false,\n      onCheck: input.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }));\n\n    _defineProperty(this, \"renderRadioGroup\", (_ref2) => {\n      let {\n        input\n      } = _ref2,\n          rest = _objectWithoutProperties(_ref2, [\"input\"]);\n\n      return __jsx(RadioButtonGroup, _extends({}, input, rest, {\n        valueSelected: input.value,\n        onChange: (event, value) => input.onChange(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }));\n    });\n\n    _defineProperty(this, \"renderSelectField\", (_ref3) => {\n      let {\n        input,\n        label,\n        meta: {\n          touched,\n          error\n        },\n        children\n      } = _ref3,\n          custom = _objectWithoutProperties(_ref3, [\"input\", \"label\", \"meta\", \"children\"]);\n\n      return __jsx(SelectField, _extends({\n        floatingLabelText: label,\n        errorText: touched && error\n      }, input, {\n        onChange: (event, index, value) => input.onChange(value),\n        children: children\n      }, custom, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }));\n    });\n\n    this.renderTextField = this.renderTextField.bind(this);\n    this.renderCheckbox = this.renderCheckbox.bind(this);\n    this.renderRadioGroup = this.renderRadioGroup.bind(this);\n    this.renderSelectField = this.renderSelectField.bind(this);\n  }\n\n  render() {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"hey\");\n  }\n\n}\n\nvalidate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate\n})(Prestation);","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/prestation.jsx"],"names":["React","Component","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","Checkbox","SelectField","MenuItem","Prestation","getInitialProps","store","constructor","props","input","label","meta","touched","error","custom","value","onChange","rest","event","children","index","renderTextField","bind","renderCheckbox","renderRadioGroup","renderSelectField","render","validate","values","errors","requiredFields","forEach","field","email","test","form"],"mappings":"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","sourcesContent":["import {React, Component} from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from 'material-ui/TextField'\r\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\n\r\n\r\nclass Prestation extends Component {\r\n    static getInitialProps({store}) {}\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.renderTextField = this.renderTextField.bind(this);\r\n      this.renderCheckbox = this.renderCheckbox.bind(this);\r\n      this.renderRadioGroup = this.renderRadioGroup.bind(this);\r\n      this.renderSelectField = this.renderSelectField.bind(this);\r\n    }\r\n  \r\n      renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => (\r\n      <TextField hintText={label}\r\n          floatingLabelText={label}\r\n          errorText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n      />\r\n      )\r\n  \r\n      renderCheckbox = ({ input, label }) => (\r\n      <Checkbox label={label}\r\n          checked={input.value ? true : false}\r\n          onCheck={input.onChange}/>\r\n      )\r\n  \r\n      renderRadioGroup = ({ input, ...rest }) => (\r\n      <RadioButtonGroup {...input} {...rest}\r\n          valueSelected={input.value}\r\n          onChange={(event, value) => input.onChange(value)}/>\r\n      )\r\n  \r\n      renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => (\r\n      <SelectField\r\n          floatingLabelText={label}\r\n          errorText={touched && error}\r\n          {...input}\r\n          onChange={(event, index, value) => input.onChange(value)}\r\n          children={children}\r\n          {...custom}/>\r\n      )\r\n\r\n    render() {\r\n      return (\r\n        <h1>hey</h1>\r\n      )\r\n    }\r\n  }\r\n\r\n  validate = values => {\r\n    const errors = {}\r\n    const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\r\n    requiredFields.forEach(field => {\r\n        if (!values[ field ]) {\r\n        errors[ field ] = 'Required'\r\n        }\r\n    })\r\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n    }\r\n\r\n    export default reduxForm({\r\n      form: 'MaterialUiForm',  // a unique identifier for this form\r\n      validate\r\n    })(Prestation);"]},"metadata":{},"sourceType":"module"}