{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\prestation.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport { connect } from 'react-redux';\n\nclass Prestation extends React.Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  render() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      name: \"firstName\",\n      component: renderTextField,\n      label: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      name: \"lastName\",\n      component: renderTextField,\n      label: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      name: \"email\",\n      component: renderTextField,\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      name: \"sex\",\n      component: renderRadioGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, __jsx(RadioButton, {\n      value: \"male\",\n      label: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }), __jsx(RadioButton, {\n      value: \"female\",\n      label: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      name: \"favoriteColor\",\n      component: renderSelectField,\n      label: \"Favorite Color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(MenuItem, {\n      value: 'ff0000',\n      primaryText: \"Red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }), __jsx(MenuItem, {\n      value: '00ff00',\n      primaryText: \"Green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }), __jsx(MenuItem, {\n      value: '0000ff',\n      primaryText: \"Blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      name: \"employed\",\n      component: renderCheckbox,\n      label: \"Employed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      name: \"notes\",\n      component: renderTextField,\n      label: \"Notes\",\n      multiLine: true,\n      rows: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      disabled: pristine || submitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Submit\"), __jsx(\"button\", {\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Clear Values\")));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst renderTextField = (_ref) => {\n  let {\n    input,\n    label,\n    meta: {\n      touched,\n      error\n    }\n  } = _ref,\n      custom = _objectWithoutProperties(_ref, [\"input\", \"label\", \"meta\"]);\n\n  return __jsx(TextField, _extends({\n    hintText: label,\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, custom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst renderCheckbox = ({\n  input,\n  label\n}) => __jsx(Checkbox, {\n  label: label,\n  checked: input.value ? true : false,\n  onCheck: input.onChange,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }\n});\n\nconst renderRadioGroup = (_ref2) => {\n  let {\n    input\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"input\"]);\n\n  return __jsx(RadioButtonGroup, _extends({}, input, rest, {\n    valueSelected: input.value,\n    onChange: (event, value) => input.onChange(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst renderSelectField = (_ref3) => {\n  let {\n    input,\n    label,\n    meta: {\n      touched,\n      error\n    },\n    children\n  } = _ref3,\n      custom = _objectWithoutProperties(_ref3, [\"input\", \"label\", \"meta\", \"children\"]);\n\n  return __jsx(SelectField, _extends({\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, {\n    onChange: (event, index, value) => input.onChange(value),\n    children: children\n  }, custom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate\n})(Prestation);","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/prestation.jsx"],"names":["React","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","Checkbox","SelectField","MenuItem","connect","Prestation","Component","getInitialProps","store","render","handleSubmit","renderTextField","renderRadioGroup","renderSelectField","renderCheckbox","pristine","submitting","reset","validate","values","errors","requiredFields","forEach","field","email","test","input","label","meta","touched","error","custom","value","onChange","rest","event","children","index","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from 'material-ui/TextField'\r\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Prestation extends React.Component {\r\n    static getInitialProps({store}) {}\r\n\r\n    render() {\r\n      return (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <Field name=\"firstName\" component={renderTextField} label=\"First Name\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"lastName\" component={renderTextField} label=\"Last Name\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"email\" component={renderTextField} label=\"Email\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"sex\" component={renderRadioGroup}>\r\n              <RadioButton value=\"male\" label=\"male\"/>\r\n              <RadioButton value=\"female\" label=\"female\"/>\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <Field name=\"favoriteColor\" component={renderSelectField} label=\"Favorite Color\">\r\n              <MenuItem value={'ff0000'} primaryText=\"Red\"/>\r\n              <MenuItem value={'00ff00'} primaryText=\"Green\"/>\r\n              <MenuItem value={'0000ff'} primaryText=\"Blue\"/>\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <Field name=\"employed\" component={renderCheckbox} label=\"Employed\"/>\r\n          </div>\r\n          <div>\r\n            <Field name=\"notes\" component={renderTextField} label=\"Notes\" multiLine={true} rows={2}/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\r\n            <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\n  const validate = values => {\r\n    const errors = {}\r\n    const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\r\n    requiredFields.forEach(field => {\r\n        if (!values[ field ]) {\r\n        errors[ field ] = 'Required'\r\n        }\r\n    })\r\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n    }\r\n\r\n    const renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => (\r\n    <TextField hintText={label}\r\n        floatingLabelText={label}\r\n        errorText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n    />\r\n    )\r\n\r\n    const renderCheckbox = ({ input, label }) => (\r\n    <Checkbox label={label}\r\n        checked={input.value ? true : false}\r\n        onCheck={input.onChange}/>\r\n    )\r\n\r\n    const renderRadioGroup = ({ input, ...rest }) => (\r\n    <RadioButtonGroup {...input} {...rest}\r\n        valueSelected={input.value}\r\n        onChange={(event, value) => input.onChange(value)}/>\r\n    )\r\n\r\n    const renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => (\r\n    <SelectField\r\n        floatingLabelText={label}\r\n        errorText={touched && error}\r\n        {...input}\r\n        onChange={(event, index, value) => input.onChange(value)}\r\n        children={children}\r\n        {...custom}/>\r\n    )\r\n\r\n  \r\n    export default reduxForm({\r\n      form: 'MaterialUiForm',  // a unique identifier for this form\r\n      validate\r\n    })(Prestation);"]},"metadata":{},"sourceType":"module"}