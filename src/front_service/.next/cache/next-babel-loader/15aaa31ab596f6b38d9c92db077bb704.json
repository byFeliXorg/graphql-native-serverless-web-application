{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\prestation.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { React, Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\n\nvar Prestation = /*#__PURE__*/function (_Component) {\n  _inherits(Prestation, _Component);\n\n  var _super = _createSuper(Prestation);\n\n  _createClass(Prestation, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  function Prestation(props) {\n    _classCallCheck(this, Prestation);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Prestation, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(TextField, {\n        hintText: label,\n        floatingLabelText: label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return Prestation;\n}(Component);\n\nvalidate = function validate(values) {\n  var errors = {};\n  var requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(function (field) {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate: validate\n})(Prestation);","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/prestation.jsx"],"names":["React","Component","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","Checkbox","SelectField","MenuItem","Prestation","store","props","label","validate","values","errors","requiredFields","forEach","field","email","test","form"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,yBAA9C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;IAGMC,U;;;;;;;0CAC8B;AAAA,UAARC,KAAQ,QAARA,KAAQ;AAAE;;;AAElC,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AACP,aACE,MAAC,SAAD;AAAW,QAAA,QAAQ,EAAEC,KAArB;AACE,QAAA,iBAAiB,EAAEA,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;;;EAboBZ,S;;AAgBvBa,QAAQ,GAAG,kBAAAC,MAAM,EAAI;AACnB,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,cAAc,GAAG,CAAE,WAAF,EAAe,UAAf,EAA2B,OAA3B,EAAoC,eAApC,EAAqD,OAArD,CAAvB;AACAA,EAAAA,cAAc,CAACC,OAAf,CAAuB,UAAAC,KAAK,EAAI;AAC5B,QAAI,CAACJ,MAAM,CAAEI,KAAF,CAAX,EAAsB;AACtBH,MAAAA,MAAM,CAAEG,KAAF,CAAN,GAAkB,UAAlB;AACC;AACJ,GAJD;;AAKA,MAAIJ,MAAM,CAACK,KAAP,IAAgB,CAAC,4CAA4CC,IAA5C,CAAiDN,MAAM,CAACK,KAAxD,CAArB,EAAqF;AACjFJ,IAAAA,MAAM,CAACI,KAAP,GAAe,uBAAf;AACH;;AACD,SAAOJ,MAAP;AACC,CAZH;;AAcE,eAAeb,SAAS,CAAC;AACvBmB,EAAAA,IAAI,EAAE,gBADiB;AACE;AACzBR,EAAAA,QAAQ,EAARA;AAFuB,CAAD,CAAT,CAGZJ,UAHY,CAAf","sourcesContent":["import {React, Component} from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from 'material-ui/TextField'\r\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\n\r\n\r\nclass Prestation extends Component {\r\n    static getInitialProps({store}) {}\r\n\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <TextField hintText={label}\r\n          floatingLabelText={label}\r\n      />\r\n      )\r\n    }\r\n  }\r\n\r\n  validate = values => {\r\n    const errors = {}\r\n    const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\r\n    requiredFields.forEach(field => {\r\n        if (!values[ field ]) {\r\n        errors[ field ] = 'Required'\r\n        }\r\n    })\r\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n    }\r\n\r\n    export default reduxForm({\r\n      form: 'MaterialUiForm',  // a unique identifier for this form\r\n      validate\r\n    })(Prestation);"]},"metadata":{},"sourceType":"module"}