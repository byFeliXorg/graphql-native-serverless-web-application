{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\prestation.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\n\nvar validate = function validate(values) {\n  var errors = {};\n  var requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(function (field) {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nvar renderTextField = function renderTextField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      custom = _objectWithoutProperties(_ref, [\"input\", \"label\", \"meta\"]);\n\n  return __jsx(TextField, _extends({\n    hintText: label,\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, custom, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar renderCheckbox = function renderCheckbox(_ref2) {\n  var input = _ref2.input,\n      label = _ref2.label;\n  return __jsx(Checkbox, {\n    label: label,\n    checked: input.value ? true : false,\n    onCheck: input.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  });\n};\n\nvar renderRadioGroup = function renderRadioGroup(_ref3) {\n  var input = _ref3.input,\n      rest = _objectWithoutProperties(_ref3, [\"input\"]);\n\n  return __jsx(RadioButtonGroup, _extends({}, input, rest, {\n    valueSelected: input.value,\n    onChange: function onChange(event, value) {\n      return input.onChange(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar renderSelectField = function renderSelectField(_ref4) {\n  var input = _ref4.input,\n      label = _ref4.label,\n      _ref4$meta = _ref4.meta,\n      touched = _ref4$meta.touched,\n      error = _ref4$meta.error,\n      children = _ref4.children,\n      custom = _objectWithoutProperties(_ref4, [\"input\", \"label\", \"meta\", \"children\"]);\n\n  return __jsx(SelectField, _extends({\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, {\n    onChange: function onChange(event, index, value) {\n      return input.onChange(value);\n    },\n    children: children\n  }, custom, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar MaterialUiForm = function MaterialUiForm(props) {\n  var handleSubmit = props.handleSubmit,\n      pristine = props.pristine,\n      reset = props.reset,\n      submitting = props.submitting;\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    name: \"firstName\",\n    component: renderTextField,\n    label: \"First Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    name: \"lastName\",\n    component: renderTextField,\n    label: \"Last Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    name: \"email\",\n    component: renderTextField,\n    label: \"Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    name: \"sex\",\n    component: renderRadioGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(RadioButton, {\n    value: \"male\",\n    label: \"male\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(RadioButton, {\n    value: \"female\",\n    label: \"female\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    name: \"favoriteColor\",\n    component: renderSelectField,\n    label: \"Favorite Color\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: 'ff0000',\n    primaryText: \"Red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), __jsx(MenuItem, {\n    value: '00ff00',\n    primaryText: \"Green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), __jsx(MenuItem, {\n    value: '0000ff',\n    primaryText: \"Blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    name: \"employed\",\n    component: renderCheckbox,\n    label: \"Employed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    name: \"notes\",\n    component: renderTextField,\n    label: \"Notes\",\n    multiLine: true,\n    rows: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Submit\"), __jsx(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Clear Values\")));\n};\n\n_c = MaterialUiForm;\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate: validate\n})(MaterialUiForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUiForm\");","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/prestation.jsx"],"names":["React","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","Checkbox","SelectField","MenuItem","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","input","label","meta","touched","error","custom","renderCheckbox","value","onChange","renderRadioGroup","rest","event","renderSelectField","children","index","MaterialUiForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from 'material-ui/TextField'\r\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[ field ]) {\r\n      errors[ field ] = 'Required'\r\n    }\r\n  })\r\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => (\r\n  <TextField hintText={label}\r\n    floatingLabelText={label}\r\n    errorText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n)\r\n\r\nconst renderCheckbox = ({ input, label }) => (\r\n  <Checkbox label={label}\r\n    checked={input.value ? true : false}\r\n    onCheck={input.onChange}/>\r\n)\r\n\r\nconst renderRadioGroup = ({ input, ...rest }) => (\r\n  <RadioButtonGroup {...input} {...rest}\r\n    valueSelected={input.value}\r\n    onChange={(event, value) => input.onChange(value)}/>\r\n)\r\n\r\nconst renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => (\r\n  <SelectField\r\n    floatingLabelText={label}\r\n    errorText={touched && error}\r\n    {...input}\r\n    onChange={(event, index, value) => input.onChange(value)}\r\n    children={children}\r\n    {...custom}/>\r\n)\r\n\r\nconst MaterialUiForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field name=\"firstName\" component={renderTextField} label=\"First Name\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"lastName\" component={renderTextField} label=\"Last Name\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"email\" component={renderTextField} label=\"Email\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"sex\" component={renderRadioGroup}>\r\n          <RadioButton value=\"male\" label=\"male\"/>\r\n          <RadioButton value=\"female\" label=\"female\"/>\r\n        </Field>\r\n      </div>\r\n      <div>\r\n        <Field name=\"favoriteColor\" component={renderSelectField} label=\"Favorite Color\">\r\n          <MenuItem value={'ff0000'} primaryText=\"Red\"/>\r\n          <MenuItem value={'00ff00'} primaryText=\"Green\"/>\r\n          <MenuItem value={'0000ff'} primaryText=\"Blue\"/>\r\n        </Field>\r\n      </div>\r\n      <div>\r\n        <Field name=\"employed\" component={renderCheckbox} label=\"Employed\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"notes\" component={renderTextField} label=\"Notes\" multiLine={true} rows={2}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'MaterialUiForm',  // a unique identifier for this form\r\n  validate\r\n})(MaterialUiForm)"]},"metadata":{},"sourceType":"module"}