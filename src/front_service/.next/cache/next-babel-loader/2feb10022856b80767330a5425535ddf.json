{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_OFFERS } from '../actions/types';\nvar initialState = {\n  offers: []\n};\nexport default function offerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_OFFERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        offers: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/src/reducers/offer.js"],"names":["FETCH_OFFERS","initialState","offers","offerReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;AAIA,eAAe,SAASC,YAAT,GAAoD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,YAAL;AACE,6CACKI,KADL;AAEEF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFjB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD","sourcesContent":["import { FETCH_OFFERS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    offers: []\r\n};\r\n\r\nexport default function offerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case FETCH_OFFERS:\r\n        return {\r\n          ...state,\r\n          offers: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}