{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\src\\\\components\\\\data\\\\offerList.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nconst OFFER_QUERY = gql`\n  {\n    allOffres {\n        data {\n        title\n        address {\n            ville\n        }\n        postedBy {\n            email\n            id_firebase_auth\n            _id\n        }\n        }\n    }\n  }\n`;\nconst DELETE_ITEM = gql`\n  mutation DeleteItem($id: ID!) {\n    deleteItem(id: $id) {\n      _id\n    }\n  }\n`;\nconst UPDATE_ITEM = gql`\n  mutation UpdateItem($id: ID!, $isComplete: Boolean!) {\n    updateItem(id: $id, data: { isComplete: $isComplete }) {\n      _id\n      isComplete\n    }\n  }\n`;\nexport default function OfferList() {\n  const {\n    data,\n    loading\n  } = useQuery(OFFER_QUERY);\n  /*\r\n    const [deleteItem, { loading: deleteLoading }] = useMutation(DELETE_ITEM, {\r\n      refetchQueries: [{ query: ITEMS_QUERY }],\r\n    });\r\n  \r\n    const [updateItem, { loading: updateLoading }] = useMutation(UPDATE_ITEM);\r\n  */\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, data.allOffres.data.map(item => {\n    const labelStyles = item.isComplete ? {\n      style: {\n        textDecoration: \"line-through\"\n      }\n    } : {};\n    return __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", _extends({}, labelStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), item.title), __jsx(\"span\", _extends({}, labelStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), \" Posted by \", item.postedBy.email), __jsx(\"span\", _extends({}, labelStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), item.description));\n  }));\n}","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/src/components/data/offerList.js"],"names":["React","gql","useMutation","useQuery","OFFER_QUERY","DELETE_ITEM","UPDATE_ITEM","OfferList","data","loading","allOffres","map","item","labelStyles","isComplete","style","textDecoration","title","postedBy","email","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AAEA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,MAAMI,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMK,WAAW,GAAGL,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASM,SAAT,GAAqB;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,QAAQ,CAACC,WAAD,CAAlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAIK,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,SAAL,CAAeF,IAAf,CAAoBG,GAApB,CAAyBC,IAAD,IAAU;AACjC,UAAMC,WAAW,GAAGD,IAAI,CAACE,UAAL,GAChB;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB;AAAT,KADgB,GAEhB,EAFJ;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,2BAAUH,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAwBD,IAAI,CAACK,KAA7B,CADF,EAEE,2BAAUJ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmCD,IAAI,CAAEM,QAAN,CAAeC,KAAlD,CAFF,EAGE,2BAAUN,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAwBD,IAAI,CAACQ,WAA7B,CAHF,CADF;AAOD,GAXA,CADH,CADF;AAgBD","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\n\r\nconst OFFER_QUERY = gql`\r\n  {\r\n    allOffres {\r\n        data {\r\n        title\r\n        address {\r\n            ville\r\n        }\r\n        postedBy {\r\n            email\r\n            id_firebase_auth\r\n            _id\r\n        }\r\n        }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_ITEM = gql`\r\n  mutation DeleteItem($id: ID!) {\r\n    deleteItem(id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_ITEM = gql`\r\n  mutation UpdateItem($id: ID!, $isComplete: Boolean!) {\r\n    updateItem(id: $id, data: { isComplete: $isComplete }) {\r\n      _id\r\n      isComplete\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function OfferList() {\r\n  const { data, loading } = useQuery(OFFER_QUERY);\r\n/*\r\n  const [deleteItem, { loading: deleteLoading }] = useMutation(DELETE_ITEM, {\r\n    refetchQueries: [{ query: ITEMS_QUERY }],\r\n  });\r\n\r\n  const [updateItem, { loading: updateLoading }] = useMutation(UPDATE_ITEM);\r\n*/\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {data.allOffres.data.map((item) => {\r\n        const labelStyles = item.isComplete\r\n          ? { style: { textDecoration: \"line-through\" } }\r\n          : {};\r\n        return (\r\n          <li >\r\n            <span {...labelStyles}>{item.title}</span>\r\n            <span {...labelStyles}> Posted by {item. postedBy.email}</span>\r\n            <span {...labelStyles}>{item.description}</span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}