{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\offers.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppWithAuthorization } from \"../src/components/App\";\nimport { db } from \"../src/firebase\";\n\nconst fromObjectToList = object => object ? Object.keys(object).map(key => _objectSpread(_objectSpread({}, object[key]), {}, {\n  index: key\n})) : [];\n\nclass OfferPage extends Component {\n  componentDidMount() {\n    const {\n      onSetUsers\n    } = this.props;\n    db.onceGetUsers().then(snapshot => onSetUsers(fromObjectToList(snapshot.val())));\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    return __jsx(AppWithAuthorization, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Offer\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"The Home Page is accessible by every signed in user.\"), !!users.length && __jsx(UserList, {\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 28\n      }\n    }));\n  }\n\n}\n\nconst UserList = ({\n  users\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, \"List of App User IDs (Saved on Sign Up in Firebase Database)\"), users.map(user => __jsx(\"div\", {\n  key: user.index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, user.index)));\n\nconst mapStateToProps = state => ({\n  users: state.userState.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUsers: users => dispatch({\n    type: \"USERS_SET\",\n    users\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OfferPage);","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/offers.js"],"names":["React","Component","connect","AppWithAuthorization","db","fromObjectToList","object","Object","keys","map","key","index","OfferPage","componentDidMount","onSetUsers","props","onceGetUsers","then","snapshot","val","render","users","length","UserList","user","mapStateToProps","state","userState","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,EAAT,QAAmB,iBAAnB;;AAEA,MAAMC,gBAAgB,GAAGC,MAAM,IAC7BA,MAAM,GACFC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,GAApB,CAAwBC,GAAG,oCAAUJ,MAAM,CAACI,GAAD,CAAhB;AAAuBC,EAAAA,KAAK,EAAED;AAA9B,EAA3B,CADE,GAEF,EAHN;;AAKA,MAAME,SAAN,SAAwBX,SAAxB,CAAkC;AAChCY,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AAEAX,IAAAA,EAAE,CAACY,YAAH,GAAkBC,IAAlB,CAAuBC,QAAQ,IAC7BJ,UAAU,CAACT,gBAAgB,CAACa,QAAQ,CAACC,GAAT,EAAD,CAAjB,CADZ;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AAEA,WACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFF,EAIG,CAAC,CAACM,KAAK,CAACC,MAAR,IAAkB,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJrB,CADF;AAQD;;AApB+B;;AAuBlC,MAAME,QAAQ,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,EAEGA,KAAK,CAACZ,GAAN,CAAUe,IAAI,IACb;AAAK,EAAA,GAAG,EAAEA,IAAI,CAACb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAuBa,IAAI,CAACb,KAA5B,CADD,CAFH,CADF;;AASA,MAAMc,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,KAAK,EAAEK,KAAK,CAACC,SAAN,CAAgBN;AADS,CAAL,CAA7B;;AAIA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,UAAU,EAAEO,KAAK,IAAIQ,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,WAAR;AAAqBT,IAAAA;AAArB,GAAD;AADS,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CACpBuB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhB,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AppWithAuthorization } from \"../src/components/App\";\r\nimport { db } from \"../src/firebase\";\r\n\r\nconst fromObjectToList = object =>\r\n  object\r\n    ? Object.keys(object).map(key => ({ ...object[key], index: key }))\r\n    : [];\r\n\r\nclass OfferPage extends Component {\r\n  componentDidMount() {\r\n    const { onSetUsers } = this.props;\r\n\r\n    db.onceGetUsers().then(snapshot =>\r\n      onSetUsers(fromObjectToList(snapshot.val()))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n\r\n    return (\r\n      <AppWithAuthorization>\r\n        <h1>Offer</h1>\r\n        <p>The Home Page is accessible by every signed in user.</p>\r\n\r\n        {!!users.length && <UserList users={users} />}\r\n      </AppWithAuthorization>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <div>\r\n    <h2>List of App User IDs (Saved on Sign Up in Firebase Database)</h2>\r\n    {users.map(user => (\r\n      <div key={user.index}>{user.index}</div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.userState.users\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSetUsers: users => dispatch({ type: \"USERS_SET\", users })\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OfferPage);\r\n"]},"metadata":{},"sourceType":"module"}