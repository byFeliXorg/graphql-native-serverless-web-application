{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\DEV\\\\git_microservices\\\\microservices\\\\src\\\\front_service\\\\pages\\\\signup.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { AppWithAuthentication } from \"../src/components/App\";\nimport { auth, db } from \"../src/firebase\";\nimport * as routes from \"../src/constants/routes\";\n\nvar SignUpPage = function SignUpPage() {\n  return __jsx(AppWithAuthentication, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \"SignUp\"), __jsx(SignUpForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c = SignUpPage;\n\nvar updateByPropertyName = function updateByPropertyName(propertyName, value) {\n  return function () {\n    return _defineProperty({}, propertyName, value);\n  };\n};\n\nvar INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null\n};\n\nvar SignUpForm = /*#__PURE__*/function (_Component) {\n  _inherits(SignUpForm, _Component);\n\n  var _super = _createSuper(SignUpForm);\n\n  function SignUpForm(props) {\n    var _this2;\n\n    _classCallCheck(this, SignUpForm);\n\n    _this2 = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this2), \"onSubmit\", function (event) {\n      var _this2$state = _this2.state,\n          username = _this2$state.username,\n          email = _this2$state.email,\n          passwordOne = _this2$state.passwordOne;\n      auth.doCreateUserWithEmailAndPassword(email, passwordOne).then(function (authUser) {\n        // Create a user in your own accessible Firebase Database too\n        db.doCreateUser(authUser.user.uid, username, email).then(function () {\n          _this2.setState(function () {\n            return _objectSpread({}, INITIAL_STATE);\n          });\n\n          Router.push(routes.HOME);\n        })[\"catch\"](function (error) {\n          _this2.setState(updateByPropertyName(\"error\", error));\n        });\n      })[\"catch\"](function (error) {\n        _this2.setState(updateByPropertyName(\"error\", error));\n      });\n      event.preventDefault();\n    });\n\n    _this2.state = _objectSpread({}, INITIAL_STATE);\n    return _this2;\n  }\n\n  _createClass(SignUpForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo,\n          error = _this$state.error;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === \"\" || username === \"\";\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, __jsx(\"h2\", {\n        className: \"text-center mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Sign Up\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, __jsx(Form.Group, {\n        id: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Email\"), __jsx(Form.Control, {\n        value: email,\n        onChange: function onChange(event) {\n          return _this3.setState(updateByPropertyName(\"email\", event.target.value));\n        },\n        type: \"text\",\n        placeholder: \"Email Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Group, {\n        id: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"Password\"), __jsx(Form.Control, {\n        value: passwordOne,\n        onChange: function onChange(event) {\n          return _this3.setState(updateByPropertyName(\"passwordOne\", event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Group, {\n        id: \"password-confirm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, \"Password Confirmation\"), __jsx(Form.Control, {\n        value: passwordTwo,\n        onChange: function onChange(event) {\n          return _this3.setState(updateByPropertyName(\"passwordTwo\", event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      })), __jsx(Button, {\n        disabled: isInvalid,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, \"Sign Up\"), error && __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, error.message)))), __jsx(\"form\", {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, __jsx(\"input\", {\n        value: username,\n        onChange: function onChange(event) {\n          return _this3.setState(updateByPropertyName(\"username\", event.target.value));\n        },\n        type: \"text\",\n        placeholder: \"Full Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }), __jsx(\"input\", {\n        value: email,\n        onChange: function onChange(event) {\n          return _this3.setState(updateByPropertyName(\"email\", event.target.value));\n        },\n        type: \"text\",\n        placeholder: \"Email Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }), __jsx(\"input\", {\n        value: passwordOne,\n        onChange: function onChange(event) {\n          return _this3.setState(updateByPropertyName(\"passwordOne\", event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }), __jsx(\"input\", {\n        value: passwordTwo,\n        onChange: function onChange(event) {\n          return _this3.setState(updateByPropertyName(\"passwordTwo\", event.target.value));\n        },\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), __jsx(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, \"Sign Up\"), error && __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, error.message)));\n    }\n  }]);\n\n  return SignUpForm;\n}(Component);\n\nvar SignUpLink = function SignUpLink() {\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 3\n    }\n  }, \"Don't have an account?\", \" \", __jsx(Link, {\n    href: routes.SIGN_UP,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"Sign Up\")));\n};\n\n_c2 = SignUpLink;\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUpPage\");\n$RefreshReg$(_c2, \"SignUpLink\");","map":{"version":3,"sources":["D:/DEV/git_microservices/microservices/src/front_service/pages/signup.js"],"names":["React","Component","Link","Router","Form","Button","Card","Alert","AppWithAuthentication","auth","db","routes","SignUpPage","updateByPropertyName","propertyName","value","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","SignUpForm","props","event","state","doCreateUserWithEmailAndPassword","then","authUser","doCreateUser","user","uid","setState","push","HOME","preventDefault","isInvalid","onSubmit","target","message","SignUpLink","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\n\r\nimport { AppWithAuthentication } from \"../src/components/App\";\r\nimport { auth, db } from \"../src/firebase\";\r\nimport * as routes from \"../src/constants/routes\";\r\n\r\nconst SignUpPage = () => (\r\n  <AppWithAuthentication>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </AppWithAuthentication>\r\n);\r\n\r\nconst updateByPropertyName = (propertyName, value) => () => ({\r\n  [propertyName]: value\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignUpForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n\r\n    auth\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your own accessible Firebase Database too\r\n        db.doCreateUser(authUser.user.uid, username, email)\r\n          .then(() => {\r\n            this.setState(() => ({ ...INITIAL_STATE }));\r\n            Router.push(routes.HOME);\r\n          })\r\n          .catch(error => {\r\n            this.setState(updateByPropertyName(\"error\", error));\r\n          });\r\n      })\r\n      .catch(error => {\r\n        this.setState(updateByPropertyName(\"error\", error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === \"\" || username === \"\";\r\n\r\n    return (\r\n      <div>\r\n\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            \r\n            <Form onSubmit={this.onSubmit}>\r\n\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control value={email}\r\n                  onChange={event =>\r\n                    this.setState(updateByPropertyName(\"email\", event.target.value))\r\n                  }\r\n                  type=\"text\"\r\n                  placeholder=\"Email Address\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control value={passwordOne}\r\n                  onChange={event =>\r\n                    this.setState(\r\n                      updateByPropertyName(\"passwordOne\", event.target.value)\r\n                    )\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"Password\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control value={passwordTwo}\r\n                  onChange={event =>\r\n                    this.setState(\r\n                      updateByPropertyName(\"passwordTwo\", event.target.value)\r\n                    )\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"/>\r\n              </Form.Group>\r\n\r\n              <Button disabled={isInvalid} type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n              {error && <p>{error.message}</p>}\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n\r\n        \r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            value={username}\r\n            onChange={event =>\r\n              this.setState(updateByPropertyName(\"username\", event.target.value))\r\n            }\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n          />\r\n          <input\r\n            value={email}\r\n            onChange={event =>\r\n              this.setState(updateByPropertyName(\"email\", event.target.value))\r\n            }\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n          />\r\n          <input\r\n            value={passwordOne}\r\n            onChange={event =>\r\n              this.setState(\r\n                updateByPropertyName(\"passwordOne\", event.target.value)\r\n              )\r\n            }\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <input\r\n            value={passwordTwo}\r\n            onChange={event =>\r\n              this.setState(\r\n                updateByPropertyName(\"passwordTwo\", event.target.value)\r\n              )\r\n            }\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n          <button disabled={isInvalid} type=\"submit\">\r\n            Sign Up\r\n          </button>\r\n\r\n          {error && <p>{error.message}</p>}\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account?{\" \"}\r\n    <Link href={routes.SIGN_UP}>\r\n      <a>Sign Up</a>\r\n    </Link>\r\n  </p>\r\n);\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n"]},"metadata":{},"sourceType":"module"}